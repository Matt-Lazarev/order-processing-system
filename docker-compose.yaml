version: '3.9'

services:
  order-service-db:
    image: postgres
    container_name: order-service-db
    ports:
      - "5433:5433"
    command: -p 5433
    volumes:
      - order-db-data:/postgresql/data
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: root
      POSTGRES_DB: order_db
  inventory-service-db:
    image: postgres
    container_name: inventory-service-db
    ports:
      - "5434:5434"
    command: -p 5434
    volumes:
      - inventory-db-data:/postgresql/data
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: root
      POSTGRES_DB: inventory_db
  payment-service-db:
    image: postgres
    container_name: payment-service-db
    ports:
      - "5435:5435"
    command: -p 5435
    volumes:
      - payment-db-data:/postgresql/data
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: root
      POSTGRES_DB: payment_db
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  keycloak-db:
    image: postgres:14.2
    container_name: keycloak-db
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
  keycloak:
    image: quay.io/keycloak/keycloak:18.0.0
    container_name: keycloak
    command: ["start-dev", "--http-port=8181"]
    environment:
      DB_VENDOR: POSTGRES
      DB_SCHEMA: public
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
    ports:
      - '8181:8181'
    depends_on:
      - keycloak-db
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=storage
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkin
    depends_on:
      - storage
  storage:
    image: openzipkin/zipkin-mysql
    container_name: zipkin-storage-mysql
    volumes:
      - zipkin-db-data:/mysql/data
  dependencies:
    image: openzipkin/zipkin-dependencies
    container_name: zipkin-dependencies
    entrypoint: crond -f
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=mysql
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkin
    depends_on:
      - storage
  discovery-server:
    image: lazarevmatt/discovery-server:1.0.0
    container_name: discovery-server
    pull_policy: always
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
  api-gateway:
    image: lazarevmatt/api-gateway:1.0.0
    container_name: api-gateway
    pull_policy: always
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - discovery-server
      - keycloak
  inventory-service:
    image: lazarevmatt/inventory-service:1.0.0
    container_name: inventory-service
    pull_policy: always
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - inventory-service-db
      - discovery-server
      - api-gateway
      - kafka
  order-service:
    image: lazarevmatt/order-service:1.0.0
    container_name: order-service
    pull_policy: always
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - order-service-db
      - discovery-server
      - api-gateway
      - kafka
  payment-service:
    image: lazarevmatt/payment-service:1.0.0
    container_name: payment-service
    pull_policy: always
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - payment-service-db
      - discovery-server
      - api-gateway
      - kafka
  user-management-service:
    image: lazarevmatt/user-management-service:1.0.0
    container_name: user-management-service
    pull_policy: always
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server
      - api-gateway

volumes:
  order-db-data:
    name: order-db-data
  inventory-db-data:
    name: inventory-db-data
  payment-db-data:
    name: payment-db-data
  keycloak-db-data:
    name: keycloak-db-data
  zipkin-db-data:
    name: zipkin-db-data

